{"ast":null,"code":"import _objectSpread from\"C:/Users/yusuf/Desktop/website/frontend-new/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import{useNavigate}from'react-router-dom';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import'./RecipeSuggestions.css';// Register ChartJS components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const PREDEFINED_RECIPES=[{id:1,name:'Tavuklu Pilav',description:'Haşlanmış veya sote edilmiş tavuk göğsü ile tereyağlı beyaz pilav. Yanına biraz zeytinyağı ile tatlandırılmış salata eklenebilir.',requiredIngredients:['Tavuk Göğsü','Pirinç'],imageUrl:'/images/recipes/tavuklu-pilav.jpg',prepTime:15,cookTime:30,nutrition:{calories:450,protein:35,carbs:45,fat:15}},{id:2,name:'Zeytinyağlı Brokoli Salatası',description:'Hafif haşlanmış brokoli üzerine zeytinyağı, limon suyu ve sarımsaklı sos eklenerek hazırlanır. Sağlıklı bir başlangıç.',requiredIngredients:['Brokoli','Zeytinyağı'],imageUrl:'/images/recipes/brokoli-salatasi.jpg',prepTime:10,cookTime:10,nutrition:{calories:180,protein:4,carbs:12,fat:14}},{id:3,name:'Kırmızı Mercimek Çorbası',description:'Kırmızı mercimek, soğan, sarımsak ve havuç gibi sebzelerle birlikte haşlanır. Zeytinyağı ve baharatlarla tatlandırılır. Üzerine kruton eklenebilir.',requiredIngredients:['Kırmızı Mercimek','Zeytinyağı'],imageUrl:'/images/recipes/mercimek-corbasi.jpg',prepTime:10,cookTime:30,nutrition:{calories:220,protein:12,carbs:35,fat:5}},{id:4,name:'Tavuklu Brokoli Sote',description:'Tavuk göğsü parçaları ve brokoli zeytinyağında sotelenerek hafif baharatlarla lezzetlendirilir. Yanına kahverengi pirinç eklenebilir.',requiredIngredients:['Tavuk Göğsü','Brokoli','Zeytinyağı'],imageUrl:'/images/recipes/tavuklu-brokoli.jpg',prepTime:15,cookTime:20,nutrition:{calories:320,protein:28,carbs:15,fat:18}},{id:5,name:'Mercimekli Pilav',description:'Pirinç ve kırmızı mercimek birlikte pişirilir. Zeytinyağı ve kuru soğan ile tatlandırılır. Besleyici ve doyurucu bir yemek.',requiredIngredients:['Pirinç','Kırmızı Mercimek'],imageUrl:'/images/recipes/mercimekli-pilav.jpg',prepTime:10,cookTime:25,nutrition:{calories:380,protein:14,carbs:65,fat:6}},{id:6,name:'Tavuklu Mercimek Pilavı',description:'Tavuk parçaları, kırmızı mercimek ve pirinç aynı tencerede pişirilerek protein ve karbonhidrat dengesi sağlanır.',requiredIngredients:['Tavuk Göğsü','Pirinç','Kırmızı Mercimek'],imageUrl:'/images/recipes/tavuklu-mercimek-pilav.jpg',prepTime:15,cookTime:35,nutrition:{calories:420,protein:32,carbs:55,fat:8}},{id:7,name:'Brokolili Sebzeli Pilav',description:'Brokoli parçaları pilavın içinde pişirilir. Üzerine hafifçe zeytinyağı gezdirilir.',requiredIngredients:['Brokoli','Zeytinyağı','Pirinç'],imageUrl:'/images/recipes/brokolili-pilav.jpg',prepTime:10,cookTime:25,nutrition:{calories:340,protein:8,carbs:58,fat:10}},{id:8,name:'Tavuklu Brokoli Pilavı',description:'Tavuk göğsü ve brokoli ile birlikte aromatik baharatlarla pişirilen beyaz pilav.',requiredIngredients:['Tavuk Göğsü','Brokoli','Pirinç'],imageUrl:'/images/recipes/tavuklu-brokolili-pilav.jpg',prepTime:15,cookTime:30,nutrition:{calories:410,protein:30,carbs:48,fat:12}}];const RecipeSuggestions=_ref=>{let{selectedIngredients,nutritionSummary,onViewDetails}=_ref;const{t}=useTranslation();const navigate=useNavigate();const[recipes,setRecipes]=useState([]);const[sortBy,setSortBy]=useState('calories');const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState('');const[favorites,setFavorites]=useState([]);const[dietaryFilters,setDietaryFilters]=useState({vegan:false,glutenFree:false,lowCarb:false,vegetarian:false,dairyFree:false});const[selectedRecipes,setSelectedRecipes]=useState([]);const[showMealPlan,setShowMealPlan]=useState(false);const[selectedRecipeId,setSelectedRecipeId]=useState(null);useEffect(()=>{if(selectedIngredients.length>0){findMatchingRecipes();}},[selectedIngredients,dietaryFilters]);const findMatchingRecipes=()=>{setIsLoading(true);try{// Seçilen malzemelerin isimlerini al\nconst selectedIngredientNames=selectedIngredients.map(ing=>ing.name);// Tarifleri filtrele\nconst matchingRecipes=PREDEFINED_RECIPES.filter(recipe=>{// Tarifteki gerekli malzemelerin hepsi seçili malzemeler arasında var mı kontrol et\nreturn recipe.requiredIngredients.every(requiredIng=>selectedIngredientNames.includes(requiredIng));});setRecipes(matchingRecipes);setError('');}catch(err){setError(t('recipes.fetchError'));console.error('Tarif yükleme hatası:',err);}finally{setIsLoading(false);}};const toggleFavorite=async recipeId=>{try{const method=favorites.includes(recipeId)?'DELETE':'POST';const response=await fetch(\"http://localhost:5001/api/recipes/favorites/\".concat(recipeId),{method,headers:{'Content-Type':'application/json'}});if(!response.ok){throw new Error('Favori işlemi başarısız oldu');}setFavorites(prev=>{if(prev.includes(recipeId)){return prev.filter(id=>id!==recipeId);}return[...prev,recipeId];});}catch(err){console.error('Favori işlemi hatası:',err);}};const sortRecipes=recipes=>{return[...recipes].sort((a,b)=>{switch(sortBy){case'calories':return a.nutrition.calories-b.nutrition.calories;case'protein':return b.nutrition.protein-a.nutrition.protein;case'carbs':return a.nutrition.carbs-b.nutrition.carbs;default:return 0;}});};const toggleDietaryFilter=filter=>{setDietaryFilters(prev=>_objectSpread(_objectSpread({},prev),{},{[filter]:!prev[filter]}));};const toggleRecipeSelection=recipe=>{setSelectedRecipes(prev=>{const isSelected=prev.find(r=>r.id===recipe.id);if(isSelected){return prev.filter(r=>r.id!==recipe.id);}return[...prev,recipe];});};const generateShoppingList=()=>{const ingredients={};selectedRecipes.forEach(recipe=>{recipe.ingredients.forEach(ing=>{const key=ing.ingredient.name;if(ingredients[key]){ingredients[key].amount+=ing.amount;}else{ingredients[key]={amount:ing.amount,unit:ing.unit};}});});return ingredients;};const renderNutritionChart=()=>{if(selectedRecipes.length===0)return null;const dailyTotals=selectedRecipes.reduce((acc,recipe)=>({calories:acc.calories+recipe.nutrition.calories,protein:acc.protein+recipe.nutrition.protein,carbs:acc.carbs+recipe.nutrition.carbs,fat:acc.fat+recipe.nutrition.fat}),{calories:0,protein:0,carbs:0,fat:0});const data={labels:[t('nutrition.calories'),t('nutrition.protein'),t('nutrition.carbs'),t('nutrition.fat')],datasets:[{label:t('nutrition.daily'),data:[dailyTotals.calories,dailyTotals.protein,dailyTotals.carbs,dailyTotals.fat],backgroundColor:['#6c5ce7','#a166ab','#00b894','#fdcb6e']}]};return/*#__PURE__*/_jsxs(\"div\",{className:\"nutrition-chart\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('nutrition.dailyTotal')}),/*#__PURE__*/_jsx(Bar,{data:data,options:{responsive:true}})]});};const renderSkeletonLoader=()=>/*#__PURE__*/_jsx(\"div\",{className:\"recipes-grid\",children:[1,2,3,4].map(i=>/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-card skeleton\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recipe-image skeleton-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"skeleton-text\"}),/*#__PURE__*/_jsx(\"div\",{className:\"skeleton-text\"}),/*#__PURE__*/_jsx(\"div\",{className:\"skeleton-text\"})]})]},i))});const renderRecipeDetails=recipe=>{if(!recipe)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-details-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:recipe.name}),/*#__PURE__*/_jsx(\"button\",{className:\"close-details\",onClick:()=>setSelectedRecipeId(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-details-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recipe-details-image\",children:/*#__PURE__*/_jsx(\"img\",{src:recipe.imageUrl,alt:recipe.name})}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Kalori:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[recipe.nutrition.calories,\" kcal\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Protein:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[recipe.nutrition.protein,\"g\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Karbonhidrat:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[recipe.nutrition.carbs,\"g\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Ya\\u011F:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[recipe.nutrition.fat,\"g\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-times\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Haz\\u0131rl\\u0131k:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[recipe.prepTime,\" dk\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"time\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Pi\\u015Firme:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[recipe.cookTime,\" dk\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-description\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Tarif A\\xE7\\u0131klamas\\u0131\"}),/*#__PURE__*/_jsx(\"p\",{children:recipe.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-ingredients\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Malzemeler\"}),/*#__PURE__*/_jsx(\"ul\",{children:recipe.requiredIngredients.map((ingredient,index)=>/*#__PURE__*/_jsx(\"li\",{children:ingredient},index))})]})]})]})]});};const handleOrder=recipeId=>{navigate('/orders',{state:{orderedRecipe:recipeId}});};if(selectedIngredients.length===0){return null;}if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"recipes-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recipes-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:t('recipes.loading')})}),renderSkeletonLoader()]});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"recipes-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"recipes-error\",children:[/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"retry-button\",onClick:findMatchingRecipes,children:t('common.retry')})]})});}const sortedRecipes=sortRecipes(recipes);return/*#__PURE__*/_jsxs(\"div\",{className:\"recipes-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"recipes-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('recipes.suggestions')}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipes-filters\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dietary-filters\",children:Object.keys(dietaryFilters).map(filter=>/*#__PURE__*/_jsx(\"button\",{className:\"filter-button \".concat(dietaryFilters[filter]?'active':''),onClick:()=>toggleDietaryFilter(filter),children:t(\"dietary.\".concat(filter))},filter))}),/*#__PURE__*/_jsx(\"div\",{className:\"recipes-sort\",children:/*#__PURE__*/_jsxs(\"select\",{value:sortBy,onChange:e=>setSortBy(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"calories\",children:t('sort.calories')}),/*#__PURE__*/_jsx(\"option\",{value:\"protein\",children:t('sort.protein')}),/*#__PURE__*/_jsx(\"option\",{value:\"carbs\",children:t('sort.carbs')})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"recipes-grid\",children:sortedRecipes.map(recipe=>/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-image\",children:[/*#__PURE__*/_jsx(\"img\",{src:recipe.imageUrl,alt:recipe.name}),/*#__PURE__*/_jsx(\"div\",{className:\"recipe-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"favorite-button \".concat(favorites.includes(recipe.id)?'active':''),onClick:e=>{e.stopPropagation();toggleFavorite(recipe.id);},children:\"\\u2665\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:recipe.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-metrics\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[recipe.triedCount,\" \",t('recipes.tried')]}),/*#__PURE__*/_jsxs(\"span\",{children:[recipe.favoriteCount,\" \",t('recipes.favorites')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-nutrition\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[recipe.nutrition.calories,\" kcal\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[recipe.nutrition.protein,\"g \",t('nutrition.protein')]}),/*#__PURE__*/_jsxs(\"span\",{children:[recipe.nutrition.carbs,\"g \",t('nutrition.carbs')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('recipes.prep'),\": \",recipe.prepTime,\" \",t('time.min')]}),/*#__PURE__*/_jsxs(\"span\",{children:[t('recipes.cook'),\": \",recipe.cookTime,\" \",t('time.min')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-rating\",children:[[1,2,3,4,5].map(star=>/*#__PURE__*/_jsx(\"span\",{className:\"star \".concat(star<=recipe.rating?'filled':''),children:\"\\u2605\"},star)),/*#__PURE__*/_jsxs(\"span\",{className:\"rating-count\",children:[\"(\",recipe.ratingCount,\")\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"view-details-button\",onClick:()=>setSelectedRecipeId(recipe.id),children:\"Tarifi G\\xF6r\\xFCnt\\xFCle\"}),/*#__PURE__*/_jsx(\"button\",{className:\"order-button disabled\",disabled:true,children:\"Sipari\\u015F Ver\"})]}),selectedRecipeId===recipe.id&&renderRecipeDetails(recipe)]})]},recipe.id))}),selectedRecipes.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"meal-plan-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[t('mealPlan.title'),\" (\",selectedRecipes.length,\")\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-meal-plan-button\",onClick:()=>setShowMealPlan(!showMealPlan),children:showMealPlan?t('mealPlan.hide'):t('mealPlan.show')}),showMealPlan&&/*#__PURE__*/_jsxs(_Fragment,{children:[renderNutritionChart(),/*#__PURE__*/_jsxs(\"div\",{className:\"shopping-list\",children:[/*#__PURE__*/_jsx(\"h4\",{children:t('mealPlan.shoppingList')}),/*#__PURE__*/_jsx(\"ul\",{children:Object.entries(generateShoppingList()).map(_ref2=>{let[ingredient,details]=_ref2;return/*#__PURE__*/_jsxs(\"li\",{children:[details.amount,\" \",details.unit,\" \",ingredient]},ingredient);})})]})]})]})]});};export default RecipeSuggestions;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useNavigate","DragDropContext","Droppable","Draggable","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","PREDEFINED_RECIPES","id","name","description","requiredIngredients","imageUrl","prepTime","cookTime","nutrition","calories","protein","carbs","fat","RecipeSuggestions","_ref","selectedIngredients","nutritionSummary","onViewDetails","t","navigate","recipes","setRecipes","sortBy","setSortBy","isLoading","setIsLoading","error","setError","favorites","setFavorites","dietaryFilters","setDietaryFilters","vegan","glutenFree","lowCarb","vegetarian","dairyFree","selectedRecipes","setSelectedRecipes","showMealPlan","setShowMealPlan","selectedRecipeId","setSelectedRecipeId","length","findMatchingRecipes","selectedIngredientNames","map","ing","matchingRecipes","filter","recipe","every","requiredIng","includes","err","console","toggleFavorite","recipeId","method","response","fetch","concat","headers","ok","Error","prev","sortRecipes","sort","a","b","toggleDietaryFilter","_objectSpread","toggleRecipeSelection","isSelected","find","r","generateShoppingList","ingredients","forEach","key","ingredient","amount","unit","renderNutritionChart","dailyTotals","reduce","acc","data","labels","datasets","label","backgroundColor","className","children","options","responsive","renderSkeletonLoader","i","renderRecipeDetails","onClick","src","alt","index","handleOrder","state","orderedRecipe","sortedRecipes","Object","keys","value","onChange","e","target","stopPropagation","triedCount","favoriteCount","star","rating","ratingCount","disabled","entries","_ref2","details"],"sources":["C:/Users/yusuf/Desktop/website/frontend-new/src/components/RecipeSuggestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport './RecipeSuggestions.css';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst PREDEFINED_RECIPES = [\n  {\n    id: 1,\n    name: 'Tavuklu Pilav',\n    description: 'Haşlanmış veya sote edilmiş tavuk göğsü ile tereyağlı beyaz pilav. Yanına biraz zeytinyağı ile tatlandırılmış salata eklenebilir.',\n    requiredIngredients: ['Tavuk Göğsü', 'Pirinç'],\n    imageUrl: '/images/recipes/tavuklu-pilav.jpg',\n    prepTime: 15,\n    cookTime: 30,\n    nutrition: {\n      calories: 450,\n      protein: 35,\n      carbs: 45,\n      fat: 15\n    }\n  },\n  {\n    id: 2,\n    name: 'Zeytinyağlı Brokoli Salatası',\n    description: 'Hafif haşlanmış brokoli üzerine zeytinyağı, limon suyu ve sarımsaklı sos eklenerek hazırlanır. Sağlıklı bir başlangıç.',\n    requiredIngredients: ['Brokoli', 'Zeytinyağı'],\n    imageUrl: '/images/recipes/brokoli-salatasi.jpg',\n    prepTime: 10,\n    cookTime: 10,\n    nutrition: {\n      calories: 180,\n      protein: 4,\n      carbs: 12,\n      fat: 14\n    }\n  },\n  {\n    id: 3,\n    name: 'Kırmızı Mercimek Çorbası',\n    description: 'Kırmızı mercimek, soğan, sarımsak ve havuç gibi sebzelerle birlikte haşlanır. Zeytinyağı ve baharatlarla tatlandırılır. Üzerine kruton eklenebilir.',\n    requiredIngredients: ['Kırmızı Mercimek', 'Zeytinyağı'],\n    imageUrl: '/images/recipes/mercimek-corbasi.jpg',\n    prepTime: 10,\n    cookTime: 30,\n    nutrition: {\n      calories: 220,\n      protein: 12,\n      carbs: 35,\n      fat: 5\n    }\n  },\n  {\n    id: 4,\n    name: 'Tavuklu Brokoli Sote',\n    description: 'Tavuk göğsü parçaları ve brokoli zeytinyağında sotelenerek hafif baharatlarla lezzetlendirilir. Yanına kahverengi pirinç eklenebilir.',\n    requiredIngredients: ['Tavuk Göğsü', 'Brokoli', 'Zeytinyağı'],\n    imageUrl: '/images/recipes/tavuklu-brokoli.jpg',\n    prepTime: 15,\n    cookTime: 20,\n    nutrition: {\n      calories: 320,\n      protein: 28,\n      carbs: 15,\n      fat: 18\n    }\n  },\n  {\n    id: 5,\n    name: 'Mercimekli Pilav',\n    description: 'Pirinç ve kırmızı mercimek birlikte pişirilir. Zeytinyağı ve kuru soğan ile tatlandırılır. Besleyici ve doyurucu bir yemek.',\n    requiredIngredients: ['Pirinç', 'Kırmızı Mercimek'],\n    imageUrl: '/images/recipes/mercimekli-pilav.jpg',\n    prepTime: 10,\n    cookTime: 25,\n    nutrition: {\n      calories: 380,\n      protein: 14,\n      carbs: 65,\n      fat: 6\n    }\n  },\n  {\n    id: 6,\n    name: 'Tavuklu Mercimek Pilavı',\n    description: 'Tavuk parçaları, kırmızı mercimek ve pirinç aynı tencerede pişirilerek protein ve karbonhidrat dengesi sağlanır.',\n    requiredIngredients: ['Tavuk Göğsü', 'Pirinç', 'Kırmızı Mercimek'],\n    imageUrl: '/images/recipes/tavuklu-mercimek-pilav.jpg',\n    prepTime: 15,\n    cookTime: 35,\n    nutrition: {\n      calories: 420,\n      protein: 32,\n      carbs: 55,\n      fat: 8\n    }\n  },\n  {\n    id: 7,\n    name: 'Brokolili Sebzeli Pilav',\n    description: 'Brokoli parçaları pilavın içinde pişirilir. Üzerine hafifçe zeytinyağı gezdirilir.',\n    requiredIngredients: ['Brokoli', 'Zeytinyağı', 'Pirinç'],\n    imageUrl: '/images/recipes/brokolili-pilav.jpg',\n    prepTime: 10,\n    cookTime: 25,\n    nutrition: {\n      calories: 340,\n      protein: 8,\n      carbs: 58,\n      fat: 10\n    }\n  },\n  {\n    id: 8,\n    name: 'Tavuklu Brokoli Pilavı',\n    description: 'Tavuk göğsü ve brokoli ile birlikte aromatik baharatlarla pişirilen beyaz pilav.',\n    requiredIngredients: ['Tavuk Göğsü', 'Brokoli', 'Pirinç'],\n    imageUrl: '/images/recipes/tavuklu-brokolili-pilav.jpg',\n    prepTime: 15,\n    cookTime: 30,\n    nutrition: {\n      calories: 410,\n      protein: 30,\n      carbs: 48,\n      fat: 12\n    }\n  }\n];\n\nconst RecipeSuggestions = ({ selectedIngredients, nutritionSummary, onViewDetails }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [recipes, setRecipes] = useState([]);\n  const [sortBy, setSortBy] = useState('calories');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [favorites, setFavorites] = useState([]);\n  const [dietaryFilters, setDietaryFilters] = useState({\n    vegan: false,\n    glutenFree: false,\n    lowCarb: false,\n    vegetarian: false,\n    dairyFree: false\n  });\n  const [selectedRecipes, setSelectedRecipes] = useState([]);\n  const [showMealPlan, setShowMealPlan] = useState(false);\n  const [selectedRecipeId, setSelectedRecipeId] = useState(null);\n\n  useEffect(() => {\n    if (selectedIngredients.length > 0) {\n      findMatchingRecipes();\n    }\n  }, [selectedIngredients, dietaryFilters]);\n\n  const findMatchingRecipes = () => {\n    setIsLoading(true);\n    try {\n      // Seçilen malzemelerin isimlerini al\n      const selectedIngredientNames = selectedIngredients.map(ing => ing.name);\n\n      // Tarifleri filtrele\n      const matchingRecipes = PREDEFINED_RECIPES.filter(recipe => {\n        // Tarifteki gerekli malzemelerin hepsi seçili malzemeler arasında var mı kontrol et\n        return recipe.requiredIngredients.every(requiredIng => \n          selectedIngredientNames.includes(requiredIng)\n        );\n      });\n\n      setRecipes(matchingRecipes);\n      setError('');\n    } catch (err) {\n      setError(t('recipes.fetchError'));\n      console.error('Tarif yükleme hatası:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const toggleFavorite = async (recipeId) => {\n    try {\n      const method = favorites.includes(recipeId) ? 'DELETE' : 'POST';\n      const response = await fetch(`http://localhost:5001/api/recipes/favorites/${recipeId}`, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Favori işlemi başarısız oldu');\n      }\n\n      setFavorites(prev => {\n        if (prev.includes(recipeId)) {\n          return prev.filter(id => id !== recipeId);\n        }\n        return [...prev, recipeId];\n      });\n    } catch (err) {\n      console.error('Favori işlemi hatası:', err);\n    }\n  };\n\n  const sortRecipes = (recipes) => {\n    return [...recipes].sort((a, b) => {\n      switch (sortBy) {\n        case 'calories':\n          return a.nutrition.calories - b.nutrition.calories;\n        case 'protein':\n          return b.nutrition.protein - a.nutrition.protein;\n        case 'carbs':\n          return a.nutrition.carbs - b.nutrition.carbs;\n        default:\n          return 0;\n      }\n    });\n  };\n\n  const toggleDietaryFilter = (filter) => {\n    setDietaryFilters(prev => ({\n      ...prev,\n      [filter]: !prev[filter]\n    }));\n  };\n\n  const toggleRecipeSelection = (recipe) => {\n    setSelectedRecipes(prev => {\n      const isSelected = prev.find(r => r.id === recipe.id);\n      if (isSelected) {\n        return prev.filter(r => r.id !== recipe.id);\n      }\n      return [...prev, recipe];\n    });\n  };\n\n  const generateShoppingList = () => {\n    const ingredients = {};\n    selectedRecipes.forEach(recipe => {\n      recipe.ingredients.forEach(ing => {\n        const key = ing.ingredient.name;\n        if (ingredients[key]) {\n          ingredients[key].amount += ing.amount;\n        } else {\n          ingredients[key] = {\n            amount: ing.amount,\n            unit: ing.unit\n          };\n        }\n      });\n    });\n    return ingredients;\n  };\n\n  const renderNutritionChart = () => {\n    if (selectedRecipes.length === 0) return null;\n\n    const dailyTotals = selectedRecipes.reduce((acc, recipe) => ({\n      calories: acc.calories + recipe.nutrition.calories,\n      protein: acc.protein + recipe.nutrition.protein,\n      carbs: acc.carbs + recipe.nutrition.carbs,\n      fat: acc.fat + recipe.nutrition.fat\n    }), { calories: 0, protein: 0, carbs: 0, fat: 0 });\n\n    const data = {\n      labels: [t('nutrition.calories'), t('nutrition.protein'), t('nutrition.carbs'), t('nutrition.fat')],\n      datasets: [{\n        label: t('nutrition.daily'),\n        data: [dailyTotals.calories, dailyTotals.protein, dailyTotals.carbs, dailyTotals.fat],\n        backgroundColor: ['#6c5ce7', '#a166ab', '#00b894', '#fdcb6e']\n      }]\n    };\n\n    return (\n      <div className=\"nutrition-chart\">\n        <h3>{t('nutrition.dailyTotal')}</h3>\n        <Bar data={data} options={{ responsive: true }} />\n      </div>\n    );\n  };\n\n  const renderSkeletonLoader = () => (\n    <div className=\"recipes-grid\">\n      {[1, 2, 3, 4].map(i => (\n        <div key={i} className=\"recipe-card skeleton\">\n          <div className=\"recipe-image skeleton-image\" />\n          <div className=\"recipe-content\">\n            <div className=\"skeleton-text\" />\n            <div className=\"skeleton-text\" />\n            <div className=\"skeleton-text\" />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderRecipeDetails = (recipe) => {\n    if (!recipe) return null;\n    \n    return (\n      <div className=\"recipe-details\">\n        <div className=\"recipe-details-header\">\n          <h3>{recipe.name}</h3>\n          <button className=\"close-details\" onClick={() => setSelectedRecipeId(null)}>×</button>\n        </div>\n        <div className=\"recipe-details-content\">\n          <div className=\"recipe-details-image\">\n            <img src={recipe.imageUrl} alt={recipe.name} />\n          </div>\n          <div className=\"recipe-info\">\n            <div className=\"recipe-stats\">\n              <div className=\"stat\">\n                <span className=\"label\">Kalori:</span>\n                <span className=\"value\">{recipe.nutrition.calories} kcal</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"label\">Protein:</span>\n                <span className=\"value\">{recipe.nutrition.protein}g</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"label\">Karbonhidrat:</span>\n                <span className=\"value\">{recipe.nutrition.carbs}g</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"label\">Yağ:</span>\n                <span className=\"value\">{recipe.nutrition.fat}g</span>\n              </div>\n            </div>\n            <div className=\"recipe-times\">\n              <div className=\"time\">\n                <span className=\"label\">Hazırlık:</span>\n                <span className=\"value\">{recipe.prepTime} dk</span>\n              </div>\n              <div className=\"time\">\n                <span className=\"label\">Pişirme:</span>\n                <span className=\"value\">{recipe.cookTime} dk</span>\n              </div>\n            </div>\n            <div className=\"recipe-description\">\n              <h4>Tarif Açıklaması</h4>\n              <p>{recipe.description}</p>\n            </div>\n            <div className=\"recipe-ingredients\">\n              <h4>Malzemeler</h4>\n              <ul>\n                {recipe.requiredIngredients.map((ingredient, index) => (\n                  <li key={index}>{ingredient}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const handleOrder = (recipeId) => {\n    navigate('/orders', { state: { orderedRecipe: recipeId } });\n  };\n\n  if (selectedIngredients.length === 0) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"recipes-container\">\n        <div className=\"recipes-header\">\n          <h3>{t('recipes.loading')}</h3>\n        </div>\n        {renderSkeletonLoader()}\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"recipes-container\">\n        <div className=\"recipes-error\">\n          <p>{error}</p>\n          <button className=\"retry-button\" onClick={findMatchingRecipes}>\n            {t('common.retry')}\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const sortedRecipes = sortRecipes(recipes);\n\n  return (\n    <div className=\"recipes-container\">\n      <div className=\"recipes-header\">\n        <h3>{t('recipes.suggestions')}</h3>\n        <div className=\"recipes-filters\">\n          <div className=\"dietary-filters\">\n            {Object.keys(dietaryFilters).map(filter => (\n              <button\n                key={filter}\n                className={`filter-button ${dietaryFilters[filter] ? 'active' : ''}`}\n                onClick={() => toggleDietaryFilter(filter)}\n              >\n                {t(`dietary.${filter}`)}\n              </button>\n            ))}\n          </div>\n          <div className=\"recipes-sort\">\n            <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\n              <option value=\"calories\">{t('sort.calories')}</option>\n              <option value=\"protein\">{t('sort.protein')}</option>\n              <option value=\"carbs\">{t('sort.carbs')}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"recipes-grid\">\n        {sortedRecipes.map(recipe => (\n          <div key={recipe.id} className=\"recipe-card\">\n            <div className=\"recipe-image\">\n              <img src={recipe.imageUrl} alt={recipe.name} />\n              <div className=\"recipe-actions\">\n                <button \n                  className={`favorite-button ${favorites.includes(recipe.id) ? 'active' : ''}`}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    toggleFavorite(recipe.id);\n                  }}\n                >\n                  ♥\n                </button>\n              </div>\n            </div>\n            <div className=\"recipe-content\">\n              <h4>{recipe.name}</h4>\n              <div className=\"recipe-metrics\">\n                <span>{recipe.triedCount} {t('recipes.tried')}</span>\n                <span>{recipe.favoriteCount} {t('recipes.favorites')}</span>\n              </div>\n              <div className=\"recipe-nutrition\">\n                <span>{recipe.nutrition.calories} kcal</span>\n                <span>{recipe.nutrition.protein}g {t('nutrition.protein')}</span>\n                <span>{recipe.nutrition.carbs}g {t('nutrition.carbs')}</span>\n              </div>\n              <div className=\"recipe-meta\">\n                <span>{t('recipes.prep')}: {recipe.prepTime} {t('time.min')}</span>\n                <span>{t('recipes.cook')}: {recipe.cookTime} {t('time.min')}</span>\n              </div>\n              <div className=\"recipe-rating\">\n                {[1, 2, 3, 4, 5].map(star => (\n                  <span \n                    key={star} \n                    className={`star ${star <= recipe.rating ? 'filled' : ''}`}\n                  >\n                    ★\n                  </span>\n                ))}\n                <span className=\"rating-count\">({recipe.ratingCount})</span>\n              </div>\n              <div className=\"recipe-buttons\">\n                <button \n                  className=\"view-details-button\"\n                  onClick={() => setSelectedRecipeId(recipe.id)}\n                >\n                  Tarifi Görüntüle\n                </button>\n                <button \n                  className=\"order-button disabled\"\n                  disabled\n                >\n                  Sipariş Ver\n                </button>\n              </div>\n              {selectedRecipeId === recipe.id && renderRecipeDetails(recipe)}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {selectedRecipes.length > 0 && (\n        <div className=\"meal-plan-section\">\n          <h3>{t('mealPlan.title')} ({selectedRecipes.length})</h3>\n          <button \n            className=\"toggle-meal-plan-button\"\n            onClick={() => setShowMealPlan(!showMealPlan)}\n          >\n            {showMealPlan ? t('mealPlan.hide') : t('mealPlan.show')}\n          </button>\n          \n          {showMealPlan && (\n            <>\n              {renderNutritionChart()}\n              \n              <div className=\"shopping-list\">\n                <h4>{t('mealPlan.shoppingList')}</h4>\n                <ul>\n                  {Object.entries(generateShoppingList()).map(([ingredient, details]) => (\n                    <li key={ingredient}>\n                      {details.amount} {details.unit} {ingredient}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeSuggestions; "],"mappings":"gIAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,eAAe,CAAEC,SAAS,CAAEC,SAAS,KAAQ,qBAAqB,CAC3E,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CACjB,MAAO,yBAAyB,CAEhC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACAZ,OAAO,CAACa,QAAQ,CACdZ,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MACF,CAAC,CAED,KAAM,CAAAQ,kBAAkB,CAAG,CACzB,CACEC,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,eAAe,CACrBC,WAAW,CAAE,mIAAmI,CAChJC,mBAAmB,CAAE,CAAC,aAAa,CAAE,QAAQ,CAAC,CAC9CC,QAAQ,CAAE,mCAAmC,CAC7CC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,CACTC,QAAQ,CAAE,GAAG,CACbC,OAAO,CAAE,EAAE,CACXC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,EACP,CACF,CAAC,CACD,CACEX,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,8BAA8B,CACpCC,WAAW,CAAE,wHAAwH,CACrIC,mBAAmB,CAAE,CAAC,SAAS,CAAE,YAAY,CAAC,CAC9CC,QAAQ,CAAE,sCAAsC,CAChDC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,CACTC,QAAQ,CAAE,GAAG,CACbC,OAAO,CAAE,CAAC,CACVC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,EACP,CACF,CAAC,CACD,CACEX,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,0BAA0B,CAChCC,WAAW,CAAE,qJAAqJ,CAClKC,mBAAmB,CAAE,CAAC,kBAAkB,CAAE,YAAY,CAAC,CACvDC,QAAQ,CAAE,sCAAsC,CAChDC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,CACTC,QAAQ,CAAE,GAAG,CACbC,OAAO,CAAE,EAAE,CACXC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,CACP,CACF,CAAC,CACD,CACEX,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,sBAAsB,CAC5BC,WAAW,CAAE,uIAAuI,CACpJC,mBAAmB,CAAE,CAAC,aAAa,CAAE,SAAS,CAAE,YAAY,CAAC,CAC7DC,QAAQ,CAAE,qCAAqC,CAC/CC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,CACTC,QAAQ,CAAE,GAAG,CACbC,OAAO,CAAE,EAAE,CACXC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,EACP,CACF,CAAC,CACD,CACEX,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,kBAAkB,CACxBC,WAAW,CAAE,6HAA6H,CAC1IC,mBAAmB,CAAE,CAAC,QAAQ,CAAE,kBAAkB,CAAC,CACnDC,QAAQ,CAAE,sCAAsC,CAChDC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,CACTC,QAAQ,CAAE,GAAG,CACbC,OAAO,CAAE,EAAE,CACXC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,CACP,CACF,CAAC,CACD,CACEX,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,yBAAyB,CAC/BC,WAAW,CAAE,kHAAkH,CAC/HC,mBAAmB,CAAE,CAAC,aAAa,CAAE,QAAQ,CAAE,kBAAkB,CAAC,CAClEC,QAAQ,CAAE,4CAA4C,CACtDC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,CACTC,QAAQ,CAAE,GAAG,CACbC,OAAO,CAAE,EAAE,CACXC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,CACP,CACF,CAAC,CACD,CACEX,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,yBAAyB,CAC/BC,WAAW,CAAE,oFAAoF,CACjGC,mBAAmB,CAAE,CAAC,SAAS,CAAE,YAAY,CAAE,QAAQ,CAAC,CACxDC,QAAQ,CAAE,qCAAqC,CAC/CC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,CACTC,QAAQ,CAAE,GAAG,CACbC,OAAO,CAAE,CAAC,CACVC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,EACP,CACF,CAAC,CACD,CACEX,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,wBAAwB,CAC9BC,WAAW,CAAE,kFAAkF,CAC/FC,mBAAmB,CAAE,CAAC,aAAa,CAAE,SAAS,CAAE,QAAQ,CAAC,CACzDC,QAAQ,CAAE,6CAA6C,CACvDC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,SAAS,CAAE,CACTC,QAAQ,CAAE,GAAG,CACbC,OAAO,CAAE,EAAE,CACXC,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,EACP,CACF,CAAC,CACF,CAED,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EAA8D,IAA7D,CAAEC,mBAAmB,CAAEC,gBAAgB,CAAEC,aAAc,CAAC,CAAAH,IAAA,CACjF,KAAM,CAAEI,CAAE,CAAC,CAAGvC,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAwC,QAAQ,CAAGvC,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACwC,OAAO,CAAEC,UAAU,CAAC,CAAG5C,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAC6C,MAAM,CAAEC,SAAS,CAAC,CAAG9C,QAAQ,CAAC,UAAU,CAAC,CAChD,KAAM,CAAC+C,SAAS,CAAEC,YAAY,CAAC,CAAGhD,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACiD,KAAK,CAAEC,QAAQ,CAAC,CAAGlD,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACmD,SAAS,CAAEC,YAAY,CAAC,CAAGpD,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACqD,cAAc,CAAEC,iBAAiB,CAAC,CAAGtD,QAAQ,CAAC,CACnDuD,KAAK,CAAE,KAAK,CACZC,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,KAAK,CACdC,UAAU,CAAE,KAAK,CACjBC,SAAS,CAAE,KACb,CAAC,CAAC,CACF,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAG7D,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAAC8D,YAAY,CAAEC,eAAe,CAAC,CAAG/D,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACgE,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGjE,QAAQ,CAAC,IAAI,CAAC,CAE9DC,SAAS,CAAC,IAAM,CACd,GAAIqC,mBAAmB,CAAC4B,MAAM,CAAG,CAAC,CAAE,CAClCC,mBAAmB,CAAC,CAAC,CACvB,CACF,CAAC,CAAE,CAAC7B,mBAAmB,CAAEe,cAAc,CAAC,CAAC,CAEzC,KAAM,CAAAc,mBAAmB,CAAGA,CAAA,GAAM,CAChCnB,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACF;AACA,KAAM,CAAAoB,uBAAuB,CAAG9B,mBAAmB,CAAC+B,GAAG,CAACC,GAAG,EAAIA,GAAG,CAAC7C,IAAI,CAAC,CAExE;AACA,KAAM,CAAA8C,eAAe,CAAGhD,kBAAkB,CAACiD,MAAM,CAACC,MAAM,EAAI,CAC1D;AACA,MAAO,CAAAA,MAAM,CAAC9C,mBAAmB,CAAC+C,KAAK,CAACC,WAAW,EACjDP,uBAAuB,CAACQ,QAAQ,CAACD,WAAW,CAC9C,CAAC,CACH,CAAC,CAAC,CAEF/B,UAAU,CAAC2B,eAAe,CAAC,CAC3BrB,QAAQ,CAAC,EAAE,CAAC,CACd,CAAE,MAAO2B,GAAG,CAAE,CACZ3B,QAAQ,CAACT,CAAC,CAAC,oBAAoB,CAAC,CAAC,CACjCqC,OAAO,CAAC7B,KAAK,CAAC,uBAAuB,CAAE4B,GAAG,CAAC,CAC7C,CAAC,OAAS,CACR7B,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,KAAM,CAAA+B,cAAc,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACzC,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG9B,SAAS,CAACyB,QAAQ,CAACI,QAAQ,CAAC,CAAG,QAAQ,CAAG,MAAM,CAC/D,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAC,KAAK,gDAAAC,MAAA,CAAgDJ,QAAQ,EAAI,CACtFC,MAAM,CACNI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CACjD,CAEAnC,YAAY,CAACoC,IAAI,EAAI,CACnB,GAAIA,IAAI,CAACZ,QAAQ,CAACI,QAAQ,CAAC,CAAE,CAC3B,MAAO,CAAAQ,IAAI,CAAChB,MAAM,CAAChD,EAAE,EAAIA,EAAE,GAAKwD,QAAQ,CAAC,CAC3C,CACA,MAAO,CAAC,GAAGQ,IAAI,CAAER,QAAQ,CAAC,CAC5B,CAAC,CAAC,CACJ,CAAE,MAAOH,GAAG,CAAE,CACZC,OAAO,CAAC7B,KAAK,CAAC,uBAAuB,CAAE4B,GAAG,CAAC,CAC7C,CACF,CAAC,CAED,KAAM,CAAAY,WAAW,CAAI9C,OAAO,EAAK,CAC/B,MAAO,CAAC,GAAGA,OAAO,CAAC,CAAC+C,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACjC,OAAQ/C,MAAM,EACZ,IAAK,UAAU,CACb,MAAO,CAAA8C,CAAC,CAAC5D,SAAS,CAACC,QAAQ,CAAG4D,CAAC,CAAC7D,SAAS,CAACC,QAAQ,CACpD,IAAK,SAAS,CACZ,MAAO,CAAA4D,CAAC,CAAC7D,SAAS,CAACE,OAAO,CAAG0D,CAAC,CAAC5D,SAAS,CAACE,OAAO,CAClD,IAAK,OAAO,CACV,MAAO,CAAA0D,CAAC,CAAC5D,SAAS,CAACG,KAAK,CAAG0D,CAAC,CAAC7D,SAAS,CAACG,KAAK,CAC9C,QACE,MAAO,EAAC,CACZ,CACF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAA2D,mBAAmB,CAAIrB,MAAM,EAAK,CACtClB,iBAAiB,CAACkC,IAAI,EAAAM,aAAA,CAAAA,aAAA,IACjBN,IAAI,MACP,CAAChB,MAAM,EAAG,CAACgB,IAAI,CAAChB,MAAM,CAAC,EACvB,CAAC,CACL,CAAC,CAED,KAAM,CAAAuB,qBAAqB,CAAItB,MAAM,EAAK,CACxCZ,kBAAkB,CAAC2B,IAAI,EAAI,CACzB,KAAM,CAAAQ,UAAU,CAAGR,IAAI,CAACS,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1E,EAAE,GAAKiD,MAAM,CAACjD,EAAE,CAAC,CACrD,GAAIwE,UAAU,CAAE,CACd,MAAO,CAAAR,IAAI,CAAChB,MAAM,CAAC0B,CAAC,EAAIA,CAAC,CAAC1E,EAAE,GAAKiD,MAAM,CAACjD,EAAE,CAAC,CAC7C,CACA,MAAO,CAAC,GAAGgE,IAAI,CAAEf,MAAM,CAAC,CAC1B,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAA0B,oBAAoB,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAAC,WAAW,CAAG,CAAC,CAAC,CACtBxC,eAAe,CAACyC,OAAO,CAAC5B,MAAM,EAAI,CAChCA,MAAM,CAAC2B,WAAW,CAACC,OAAO,CAAC/B,GAAG,EAAI,CAChC,KAAM,CAAAgC,GAAG,CAAGhC,GAAG,CAACiC,UAAU,CAAC9E,IAAI,CAC/B,GAAI2E,WAAW,CAACE,GAAG,CAAC,CAAE,CACpBF,WAAW,CAACE,GAAG,CAAC,CAACE,MAAM,EAAIlC,GAAG,CAACkC,MAAM,CACvC,CAAC,IAAM,CACLJ,WAAW,CAACE,GAAG,CAAC,CAAG,CACjBE,MAAM,CAAElC,GAAG,CAACkC,MAAM,CAClBC,IAAI,CAAEnC,GAAG,CAACmC,IACZ,CAAC,CACH,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACF,MAAO,CAAAL,WAAW,CACpB,CAAC,CAED,KAAM,CAAAM,oBAAoB,CAAGA,CAAA,GAAM,CACjC,GAAI9C,eAAe,CAACM,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAE7C,KAAM,CAAAyC,WAAW,CAAG/C,eAAe,CAACgD,MAAM,CAAC,CAACC,GAAG,CAAEpC,MAAM,IAAM,CAC3DzC,QAAQ,CAAE6E,GAAG,CAAC7E,QAAQ,CAAGyC,MAAM,CAAC1C,SAAS,CAACC,QAAQ,CAClDC,OAAO,CAAE4E,GAAG,CAAC5E,OAAO,CAAGwC,MAAM,CAAC1C,SAAS,CAACE,OAAO,CAC/CC,KAAK,CAAE2E,GAAG,CAAC3E,KAAK,CAAGuC,MAAM,CAAC1C,SAAS,CAACG,KAAK,CACzCC,GAAG,CAAE0E,GAAG,CAAC1E,GAAG,CAAGsC,MAAM,CAAC1C,SAAS,CAACI,GAClC,CAAC,CAAC,CAAE,CAAEH,QAAQ,CAAE,CAAC,CAAEC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,GAAG,CAAE,CAAE,CAAC,CAAC,CAElD,KAAM,CAAA2E,IAAI,CAAG,CACXC,MAAM,CAAE,CAACtE,CAAC,CAAC,oBAAoB,CAAC,CAAEA,CAAC,CAAC,mBAAmB,CAAC,CAAEA,CAAC,CAAC,iBAAiB,CAAC,CAAEA,CAAC,CAAC,eAAe,CAAC,CAAC,CACnGuE,QAAQ,CAAE,CAAC,CACTC,KAAK,CAAExE,CAAC,CAAC,iBAAiB,CAAC,CAC3BqE,IAAI,CAAE,CAACH,WAAW,CAAC3E,QAAQ,CAAE2E,WAAW,CAAC1E,OAAO,CAAE0E,WAAW,CAACzE,KAAK,CAAEyE,WAAW,CAACxE,GAAG,CAAC,CACrF+E,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAC9D,CAAC,CACH,CAAC,CAED,mBACE/F,KAAA,QAAKgG,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BnG,IAAA,OAAAmG,QAAA,CAAK3E,CAAC,CAAC,sBAAsB,CAAC,CAAK,CAAC,cACpCxB,IAAA,CAACV,GAAG,EAACuG,IAAI,CAAEA,IAAK,CAACO,OAAO,CAAE,CAAEC,UAAU,CAAE,IAAK,CAAE,CAAE,CAAC,EAC/C,CAAC,CAEV,CAAC,CAED,KAAM,CAAAC,oBAAoB,CAAGA,CAAA,gBAC3BtG,IAAA,QAAKkG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1B,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC/C,GAAG,CAACmD,CAAC,eACjBrG,KAAA,QAAagG,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eAC3CnG,IAAA,QAAKkG,SAAS,CAAC,6BAA6B,CAAE,CAAC,cAC/ChG,KAAA,QAAKgG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BnG,IAAA,QAAKkG,SAAS,CAAC,eAAe,CAAE,CAAC,cACjClG,IAAA,QAAKkG,SAAS,CAAC,eAAe,CAAE,CAAC,cACjClG,IAAA,QAAKkG,SAAS,CAAC,eAAe,CAAE,CAAC,EAC9B,CAAC,GANEK,CAOL,CACN,CAAC,CACC,CACN,CAED,KAAM,CAAAC,mBAAmB,CAAIhD,MAAM,EAAK,CACtC,GAAI,CAACA,MAAM,CAAE,MAAO,KAAI,CAExB,mBACEtD,KAAA,QAAKgG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BjG,KAAA,QAAKgG,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCnG,IAAA,OAAAmG,QAAA,CAAK3C,MAAM,CAAChD,IAAI,CAAK,CAAC,cACtBR,IAAA,WAAQkG,SAAS,CAAC,eAAe,CAACO,OAAO,CAAEA,CAAA,GAAMzD,mBAAmB,CAAC,IAAI,CAAE,CAAAmD,QAAA,CAAC,MAAC,CAAQ,CAAC,EACnF,CAAC,cACNjG,KAAA,QAAKgG,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACrCnG,IAAA,QAAKkG,SAAS,CAAC,sBAAsB,CAAAC,QAAA,cACnCnG,IAAA,QAAK0G,GAAG,CAAElD,MAAM,CAAC7C,QAAS,CAACgG,GAAG,CAAEnD,MAAM,CAAChD,IAAK,CAAE,CAAC,CAC5C,CAAC,cACNN,KAAA,QAAKgG,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BjG,KAAA,QAAKgG,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BjG,KAAA,QAAKgG,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBnG,IAAA,SAAMkG,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,SAAO,CAAM,CAAC,cACtCjG,KAAA,SAAMgG,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAE3C,MAAM,CAAC1C,SAAS,CAACC,QAAQ,CAAC,OAAK,EAAM,CAAC,EAC5D,CAAC,cACNb,KAAA,QAAKgG,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBnG,IAAA,SAAMkG,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,cACvCjG,KAAA,SAAMgG,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAE3C,MAAM,CAAC1C,SAAS,CAACE,OAAO,CAAC,GAAC,EAAM,CAAC,EACvD,CAAC,cACNd,KAAA,QAAKgG,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBnG,IAAA,SAAMkG,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,eAAa,CAAM,CAAC,cAC5CjG,KAAA,SAAMgG,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAE3C,MAAM,CAAC1C,SAAS,CAACG,KAAK,CAAC,GAAC,EAAM,CAAC,EACrD,CAAC,cACNf,KAAA,QAAKgG,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBnG,IAAA,SAAMkG,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,WAAI,CAAM,CAAC,cACnCjG,KAAA,SAAMgG,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAE3C,MAAM,CAAC1C,SAAS,CAACI,GAAG,CAAC,GAAC,EAAM,CAAC,EACnD,CAAC,EACH,CAAC,cACNhB,KAAA,QAAKgG,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BjG,KAAA,QAAKgG,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBnG,IAAA,SAAMkG,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,qBAAS,CAAM,CAAC,cACxCjG,KAAA,SAAMgG,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAE3C,MAAM,CAAC5C,QAAQ,CAAC,KAAG,EAAM,CAAC,EAChD,CAAC,cACNV,KAAA,QAAKgG,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBnG,IAAA,SAAMkG,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,eAAQ,CAAM,CAAC,cACvCjG,KAAA,SAAMgG,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAE3C,MAAM,CAAC3C,QAAQ,CAAC,KAAG,EAAM,CAAC,EAChD,CAAC,EACH,CAAC,cACNX,KAAA,QAAKgG,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCnG,IAAA,OAAAmG,QAAA,CAAI,+BAAgB,CAAI,CAAC,cACzBnG,IAAA,MAAAmG,QAAA,CAAI3C,MAAM,CAAC/C,WAAW,CAAI,CAAC,EACxB,CAAC,cACNP,KAAA,QAAKgG,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCnG,IAAA,OAAAmG,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBnG,IAAA,OAAAmG,QAAA,CACG3C,MAAM,CAAC9C,mBAAmB,CAAC0C,GAAG,CAAC,CAACkC,UAAU,CAAEsB,KAAK,gBAChD5G,IAAA,OAAAmG,QAAA,CAAiBb,UAAU,EAAlBsB,KAAuB,CACjC,CAAC,CACA,CAAC,EACF,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,KAAM,CAAAC,WAAW,CAAI9C,QAAQ,EAAK,CAChCtC,QAAQ,CAAC,SAAS,CAAE,CAAEqF,KAAK,CAAE,CAAEC,aAAa,CAAEhD,QAAS,CAAE,CAAC,CAAC,CAC7D,CAAC,CAED,GAAI1C,mBAAmB,CAAC4B,MAAM,GAAK,CAAC,CAAE,CACpC,MAAO,KAAI,CACb,CAEA,GAAInB,SAAS,CAAE,CACb,mBACE5B,KAAA,QAAKgG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCnG,IAAA,QAAKkG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BnG,IAAA,OAAAmG,QAAA,CAAK3E,CAAC,CAAC,iBAAiB,CAAC,CAAK,CAAC,CAC5B,CAAC,CACL8E,oBAAoB,CAAC,CAAC,EACpB,CAAC,CAEV,CAEA,GAAItE,KAAK,CAAE,CACT,mBACEhC,IAAA,QAAKkG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCjG,KAAA,QAAKgG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BnG,IAAA,MAAAmG,QAAA,CAAInE,KAAK,CAAI,CAAC,cACdhC,IAAA,WAAQkG,SAAS,CAAC,cAAc,CAACO,OAAO,CAAEvD,mBAAoB,CAAAiD,QAAA,CAC3D3E,CAAC,CAAC,cAAc,CAAC,CACZ,CAAC,EACN,CAAC,CACH,CAAC,CAEV,CAEA,KAAM,CAAAwF,aAAa,CAAGxC,WAAW,CAAC9C,OAAO,CAAC,CAE1C,mBACExB,KAAA,QAAKgG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCjG,KAAA,QAAKgG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BnG,IAAA,OAAAmG,QAAA,CAAK3E,CAAC,CAAC,qBAAqB,CAAC,CAAK,CAAC,cACnCtB,KAAA,QAAKgG,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BnG,IAAA,QAAKkG,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7Bc,MAAM,CAACC,IAAI,CAAC9E,cAAc,CAAC,CAACgB,GAAG,CAACG,MAAM,eACrCvD,IAAA,WAEEkG,SAAS,kBAAA/B,MAAA,CAAmB/B,cAAc,CAACmB,MAAM,CAAC,CAAG,QAAQ,CAAG,EAAE,CAAG,CACrEkD,OAAO,CAAEA,CAAA,GAAM7B,mBAAmB,CAACrB,MAAM,CAAE,CAAA4C,QAAA,CAE1C3E,CAAC,YAAA2C,MAAA,CAAYZ,MAAM,CAAE,CAAC,EAJlBA,MAKC,CACT,CAAC,CACC,CAAC,cACNvD,IAAA,QAAKkG,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BjG,KAAA,WAAQiH,KAAK,CAAEvF,MAAO,CAACwF,QAAQ,CAAGC,CAAC,EAAKxF,SAAS,CAACwF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAhB,QAAA,eAChEnG,IAAA,WAAQmH,KAAK,CAAC,UAAU,CAAAhB,QAAA,CAAE3E,CAAC,CAAC,eAAe,CAAC,CAAS,CAAC,cACtDxB,IAAA,WAAQmH,KAAK,CAAC,SAAS,CAAAhB,QAAA,CAAE3E,CAAC,CAAC,cAAc,CAAC,CAAS,CAAC,cACpDxB,IAAA,WAAQmH,KAAK,CAAC,OAAO,CAAAhB,QAAA,CAAE3E,CAAC,CAAC,YAAY,CAAC,CAAS,CAAC,EAC1C,CAAC,CACN,CAAC,EACH,CAAC,EACH,CAAC,cAENxB,IAAA,QAAKkG,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1Ba,aAAa,CAAC5D,GAAG,CAACI,MAAM,eACvBtD,KAAA,QAAqBgG,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1CjG,KAAA,QAAKgG,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BnG,IAAA,QAAK0G,GAAG,CAAElD,MAAM,CAAC7C,QAAS,CAACgG,GAAG,CAAEnD,MAAM,CAAChD,IAAK,CAAE,CAAC,cAC/CR,IAAA,QAAKkG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BnG,IAAA,WACEkG,SAAS,oBAAA/B,MAAA,CAAqBjC,SAAS,CAACyB,QAAQ,CAACH,MAAM,CAACjD,EAAE,CAAC,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC9EkG,OAAO,CAAGY,CAAC,EAAK,CACdA,CAAC,CAACE,eAAe,CAAC,CAAC,CACnBzD,cAAc,CAACN,MAAM,CAACjD,EAAE,CAAC,CAC3B,CAAE,CAAA4F,QAAA,CACH,QAED,CAAQ,CAAC,CACN,CAAC,EACH,CAAC,cACNjG,KAAA,QAAKgG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BnG,IAAA,OAAAmG,QAAA,CAAK3C,MAAM,CAAChD,IAAI,CAAK,CAAC,cACtBN,KAAA,QAAKgG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BjG,KAAA,SAAAiG,QAAA,EAAO3C,MAAM,CAACgE,UAAU,CAAC,GAAC,CAAChG,CAAC,CAAC,eAAe,CAAC,EAAO,CAAC,cACrDtB,KAAA,SAAAiG,QAAA,EAAO3C,MAAM,CAACiE,aAAa,CAAC,GAAC,CAACjG,CAAC,CAAC,mBAAmB,CAAC,EAAO,CAAC,EACzD,CAAC,cACNtB,KAAA,QAAKgG,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BjG,KAAA,SAAAiG,QAAA,EAAO3C,MAAM,CAAC1C,SAAS,CAACC,QAAQ,CAAC,OAAK,EAAM,CAAC,cAC7Cb,KAAA,SAAAiG,QAAA,EAAO3C,MAAM,CAAC1C,SAAS,CAACE,OAAO,CAAC,IAAE,CAACQ,CAAC,CAAC,mBAAmB,CAAC,EAAO,CAAC,cACjEtB,KAAA,SAAAiG,QAAA,EAAO3C,MAAM,CAAC1C,SAAS,CAACG,KAAK,CAAC,IAAE,CAACO,CAAC,CAAC,iBAAiB,CAAC,EAAO,CAAC,EAC1D,CAAC,cACNtB,KAAA,QAAKgG,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BjG,KAAA,SAAAiG,QAAA,EAAO3E,CAAC,CAAC,cAAc,CAAC,CAAC,IAAE,CAACgC,MAAM,CAAC5C,QAAQ,CAAC,GAAC,CAACY,CAAC,CAAC,UAAU,CAAC,EAAO,CAAC,cACnEtB,KAAA,SAAAiG,QAAA,EAAO3E,CAAC,CAAC,cAAc,CAAC,CAAC,IAAE,CAACgC,MAAM,CAAC3C,QAAQ,CAAC,GAAC,CAACW,CAAC,CAAC,UAAU,CAAC,EAAO,CAAC,EAChE,CAAC,cACNtB,KAAA,QAAKgG,SAAS,CAAC,eAAe,CAAAC,QAAA,EAC3B,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC/C,GAAG,CAACsE,IAAI,eACvB1H,IAAA,SAEEkG,SAAS,SAAA/B,MAAA,CAAUuD,IAAI,EAAIlE,MAAM,CAACmE,MAAM,CAAG,QAAQ,CAAG,EAAE,CAAG,CAAAxB,QAAA,CAC5D,QAED,EAJOuB,IAID,CACP,CAAC,cACFxH,KAAA,SAAMgG,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAC,GAAC,CAAC3C,MAAM,CAACoE,WAAW,CAAC,GAAC,EAAM,CAAC,EACzD,CAAC,cACN1H,KAAA,QAAKgG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BnG,IAAA,WACEkG,SAAS,CAAC,qBAAqB,CAC/BO,OAAO,CAAEA,CAAA,GAAMzD,mBAAmB,CAACQ,MAAM,CAACjD,EAAE,CAAE,CAAA4F,QAAA,CAC/C,2BAED,CAAQ,CAAC,cACTnG,IAAA,WACEkG,SAAS,CAAC,uBAAuB,CACjC2B,QAAQ,MAAA1B,QAAA,CACT,kBAED,CAAQ,CAAC,EACN,CAAC,CACLpD,gBAAgB,GAAKS,MAAM,CAACjD,EAAE,EAAIiG,mBAAmB,CAAChD,MAAM,CAAC,EAC3D,CAAC,GAxDEA,MAAM,CAACjD,EAyDZ,CACN,CAAC,CACC,CAAC,CAELoC,eAAe,CAACM,MAAM,CAAG,CAAC,eACzB/C,KAAA,QAAKgG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCjG,KAAA,OAAAiG,QAAA,EAAK3E,CAAC,CAAC,gBAAgB,CAAC,CAAC,IAAE,CAACmB,eAAe,CAACM,MAAM,CAAC,GAAC,EAAI,CAAC,cACzDjD,IAAA,WACEkG,SAAS,CAAC,yBAAyB,CACnCO,OAAO,CAAEA,CAAA,GAAM3D,eAAe,CAAC,CAACD,YAAY,CAAE,CAAAsD,QAAA,CAE7CtD,YAAY,CAAGrB,CAAC,CAAC,eAAe,CAAC,CAAGA,CAAC,CAAC,eAAe,CAAC,CACjD,CAAC,CAERqB,YAAY,eACX3C,KAAA,CAAAE,SAAA,EAAA+F,QAAA,EACGV,oBAAoB,CAAC,CAAC,cAEvBvF,KAAA,QAAKgG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BnG,IAAA,OAAAmG,QAAA,CAAK3E,CAAC,CAAC,uBAAuB,CAAC,CAAK,CAAC,cACrCxB,IAAA,OAAAmG,QAAA,CACGc,MAAM,CAACa,OAAO,CAAC5C,oBAAoB,CAAC,CAAC,CAAC,CAAC9B,GAAG,CAAC2E,KAAA,MAAC,CAACzC,UAAU,CAAE0C,OAAO,CAAC,CAAAD,KAAA,oBAChE7H,KAAA,OAAAiG,QAAA,EACG6B,OAAO,CAACzC,MAAM,CAAC,GAAC,CAACyC,OAAO,CAACxC,IAAI,CAAC,GAAC,CAACF,UAAU,GADpCA,UAEL,CAAC,EACN,CAAC,CACA,CAAC,EACF,CAAC,EACN,CACH,EACE,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnE,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}